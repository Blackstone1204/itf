<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.AccountMapper">
  <resultMap id="BaseResultMap" type="com.model.Account">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="account" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="account_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role_id" javaType="java.lang.String" jdbcType="VARCHAR" />
       <arg column="is_delete" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, account, password, account_name, role_id,is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAccountId" parameterType="java.lang.String" resultType="java.lang.String">
    select 
    id
    from account
    where account = #{account,jdbcType=VARCHAR}
  </select>
  <select id="selectAll"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
  </select>
  <select id="checkAccount"  parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*)
    from account where account=#{account,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
  </select>
  


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from account
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.model.Account">
    insert into account (id, account, password, 
      account_name, role_id)
    values (#{id,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{accountName,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.model.Account">
    update account
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>